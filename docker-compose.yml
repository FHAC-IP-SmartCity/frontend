services:
  postgres:
    image: postgres:15
    container_name: Smart-City
    environment:
      POSTGRES_USER: kunde
      POSTGRES_PASSWORD: kunde
      POSTGRES_DB: prodDB
    ports:
      - "5432:5432"
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Mount the init.sql script


  flask-server:
    build:
      context: .
      dockerfile: dockerfile
    container_name: flask-server
    environment:
      - DB_NAME=prodDB
      - DB_USER=kunde
      - DB_PASSWORD=kunde
      - DB_HOST=postgres
      - DB_PORT=5432
      - FLASK_ENV=production
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src
      - ./requirements.txt:/app/requirements.txt
    depends_on:
      - postgres
    networks:
      - app_network
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - postgres
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  grafana_data:
